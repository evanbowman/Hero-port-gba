<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="STEP" id="2">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">if (shaking &amp;&amp; obj_sabot.shakescreen==0)
    obj_sabot.shakescreen=2;

if (move&gt;0){
    if (global.hardmode)
        movecyc+=2;
    else
        movecyc+=1;
    }
if (movecyc&gt;=4){
    movecyc=0;
    if (move==1){
        x+=2;
        if (place_meeting(x,y,obj_hero))
            obj_hero.x+=2;
        }
    else if (move==2){
        y-=2;
        if (place_meeting(x,y,obj_hero))
            obj_hero.y-=2;
        }
    else if (move==3){
        x-=2;
        if (place_meeting(x,y,obj_hero))
            obj_hero.x-=2;
        }
    else if (move==4){
        y+=2;
        if (place_meeting(x,y,obj_hero))
            obj_hero.y+=2;
        }
    }

//DEAD
if (hp&lt;=0 &amp;&amp; !dead){
    with (obj_sabot){
        if (!global.bossmode)
            scr_wantsong(0);
        }
    obj_hero.cannotwarp=1;
    dead=1;
    shaking=1;
    move=0;
    solid=0;
    eoffx=x-24+random(48);
    eoffy=y-24+random(48);
    timeline_index=-1;
    speed=0;
    direction=0;
    for (i=0;i&lt;36;i+=1){
        tempid=instance_create(x+sin(degtorad(i*10))*60,y+cos(degtorad(i*10))*60,obj_bigexplo);
        tempid.direction=i*10-90;
        if (i mod 2)
            tempid.speed=6;
        else
            tempid.speed=3;
        }
    with (obj_smasherneck)
        hp=0;
    with (obj_esupershot){
        instance_destroy();
        instance_create(x,y,obj_explo);
        }
    with (obj_emegashot){
        instance_destroy();
        instance_create(x,y,obj_explo);
        }
    with (obj_egigashot){
        instance_destroy();
        instance_create(x,y,obj_explo);
        }
    with (obj_eshot)
        instance_destroy();
    obj_sabot.shakescreen=6;
    }

if (dead){
    if (global.bossmode){
        deadcyc=150;
        scr_bossmodereward(5);
        with (obj_smasherneck){
            instance_create(x,y,obj_bigexplo);
            instance_destroy();
            }
        }
    deadcyc+=1;
    if (deadcyc==20){
        obj_smasherneck.dmax=2;
        }
    if (deadcyc&gt;=150){
        obj_sabot.boss=0;
        obj_sabot.explo[4]=1;
        obj_sabot.pickuppresent=1;
        instance_destroy();
        with (obj_smasherneck)
            instance_destroy();
        obj_sabot.shakescreen=12;
        obj_bgdraw.alpha=0.015;
        for (i=0;i&lt;6;i+=1){
            for (j=0;j&lt;8;j+=1){
                tempid=instance_create(x+sin(degtorad(j*45))*i*20,y+cos(degtorad(j*45))*i*20,obj_bigexplo);
                tempid.speed=(i+1)*2;
                tempid.direction=j*45;
                tempid.gravity=i/2.7;
                tempid.gravity_direction=tempid.direction+145;
                }
            }
        for (i=1;i&lt;361;i+=4){
            sp+=4;
            if (sp&gt;=16) sp=0;
            tempid=instance_create(x,y,obj_firework);
            tempid.sprite_index=spr_flame;
            tempid.direction=i;
            tempid.speed=(sp+4)/3+1;
            tempid.i=1;
            }
        if (global.difficulty&lt;2){
            if (global.difficulty==0)
                (instance_create(x,y,obj_pickup)).image_single=2;
            else
                (instance_create(x,y,obj_pickup)).image_single=1;
            }
        else
            obj_sabot.mitemclear[obj_sabot.roomx,obj_sabot.roomy]=1;
        }
    }</argument>
      </arguments>
    </action>
  </actions>
</event>
