<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="STEP" id="2">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">if (!arm){
    x=owner.x+xoffset;
    y=owner.y+yoffset;
    }

//arm
if (arm){
    if (shift==3){
        if (!shift3init){
            shift3init=1;
            xhold=x;
            yhold=y;
            }
        shift3cyc+=1;
        if (shift3cyc==2){
            shift3cyc=0;
            xplus=-2+random(6);
            yplus=-2+random(6);
            x=xhold+xplus;
            y=yhold+yplus;
            }
        }
    if (shift==1){
        speed=2;
        if (image_single==0)
            direction=135;
        else
            direction=45;
        shiftcyc+=1;
        if (shiftcyc==24){
            shift=0;
            speed=0;
            }
        }
    else if (shift==2){
        speed=2;
        if (image_single==0)
            direction=315;
        else
            direction=225;
        shiftcyc+=1;
        if (shiftcyc==24){
            shift=0;
            speed=0;
            }
        }
    else
        shiftcyc=0;
    }
//head
if (!arm &amp;&amp; !move &amp;&amp; !static){
    cyc+=1;
    if (cyc==8){
        cyc=0;
        if (global.hp&gt;0){
            if (x&gt;obj_hero.x-16 &amp;&amp; x&lt;obj_hero.x+16)
                image_single=1;
            else if (x&gt;obj_hero.x)
                image_single=0;
            else
                image_single=2;
            }
        }
    }
//necks
if (move){
    if (d&lt;dmax)
        d+=1;
    if (global.hardmode)
        rot+=1.4;
    else
        rot+=0.8;
    if (rot&gt;360)
        rot-=360;
    if (rot&lt;0)
        rot+=360;
    frot=rot+offset;
    x2=cos(degtorad(frot))*d;
    y2=(sin(degtorad(frot))*d);
    x=xstart+x2;
    y=ystart+y2;
    if (d&gt;=dmax)
        instance_destroy();
    }</argument>
      </arguments>
    </action>
  </actions>
</event>
